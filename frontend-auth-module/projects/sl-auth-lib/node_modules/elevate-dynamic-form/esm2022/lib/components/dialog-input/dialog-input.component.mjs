import { Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/material/input";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/material/button";
import * as i5 from "@angular/material/icon";
import * as i6 from "@angular/material/dialog";
export class DialogInputComponent {
    constructor(dialogData) {
        this.dialogData = dialogData;
    }
    ngOnInit() { }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.8", ngImport: i0, type: DialogInputComponent, deps: [{ token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.8", type: DialogInputComponent, selector: "lib-dialog-input", ngImport: i0, template: "<div class=\"dialog-header\">\n  <mat-label mat-dialog-title>{{ dialogData?.header }}</mat-label>\n  <mat-icon class=\"mat-cancel-icon\" [mat-dialog-close]=\"false\"\n    >cancel_circle_outline</mat-icon\n  >\n</div>\n<div mat-dialog-content>\n  <mat-form-field style=\"width: 100%\" floatLabel=\"always\">\n    <mat-label>{{ dialogData?.label }}</mat-label>\n    <input\n      matInput\n      [(ngModel)]=\"data\"\n      [required]=\"dialogData?.required\"\n      [maxlength]=\"dialogData?.maxLength\"\n    />\n  </mat-form-field>\n</div>\n<div mat-dialog-actions class=\"buttons-section\">\n  <button mat-raised-button [mat-dialog-close]=\"false\">\n    {{ dialogData?.buttonText?.cancel }}\n  </button>\n  <button mat-raised-button [mat-dialog-close]=\"data\" cdkFocusInitial>\n    {{ dialogData?.buttonText?.ok }}\n  </button>\n</div>\n", styles: [".dialog-header{display:flex;flex-direction:row;justify-content:space-between}.buttons-section{justify-content:end}\n"], dependencies: [{ kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i1.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i2.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "component", type: i3.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i3.MatLabel, selector: "mat-label" }, { kind: "component", type: i4.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }, { kind: "component", type: i5.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: i6.MatDialogClose, selector: "[mat-dialog-close], [matDialogClose]", inputs: ["aria-label", "type", "mat-dialog-close", "matDialogClose"], exportAs: ["matDialogClose"] }, { kind: "directive", type: i6.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", inputs: ["id"], exportAs: ["matDialogTitle"] }, { kind: "directive", type: i6.MatDialogActions, selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]", inputs: ["align"] }, { kind: "directive", type: i6.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.8", ngImport: i0, type: DialogInputComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-dialog-input', template: "<div class=\"dialog-header\">\n  <mat-label mat-dialog-title>{{ dialogData?.header }}</mat-label>\n  <mat-icon class=\"mat-cancel-icon\" [mat-dialog-close]=\"false\"\n    >cancel_circle_outline</mat-icon\n  >\n</div>\n<div mat-dialog-content>\n  <mat-form-field style=\"width: 100%\" floatLabel=\"always\">\n    <mat-label>{{ dialogData?.label }}</mat-label>\n    <input\n      matInput\n      [(ngModel)]=\"data\"\n      [required]=\"dialogData?.required\"\n      [maxlength]=\"dialogData?.maxLength\"\n    />\n  </mat-form-field>\n</div>\n<div mat-dialog-actions class=\"buttons-section\">\n  <button mat-raised-button [mat-dialog-close]=\"false\">\n    {{ dialogData?.buttonText?.cancel }}\n  </button>\n  <button mat-raised-button [mat-dialog-close]=\"data\" cdkFocusInitial>\n    {{ dialogData?.buttonText?.ok }}\n  </button>\n</div>\n", styles: [".dialog-header{display:flex;flex-direction:row;justify-content:space-between}.buttons-section{justify-content:end}\n"] }]
        }], ctorParameters: () => [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLWlucHV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2R5bmFtaWMtZm9ybS9zcmMvbGliL2NvbXBvbmVudHMvZGlhbG9nLWlucHV0L2RpYWxvZy1pbnB1dC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9keW5hbWljLWZvcm0vc3JjL2xpYi9jb21wb25lbnRzL2RpYWxvZy1pbnB1dC9kaWFsb2ctaW5wdXQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDMUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDOzs7Ozs7OztBQU8zRCxNQUFNLE9BQU8sb0JBQW9CO0lBRy9CLFlBQTRDLFVBQWU7UUFBZixlQUFVLEdBQVYsVUFBVSxDQUFLO0lBQUcsQ0FBQztJQUUvRCxRQUFRLEtBQUksQ0FBQzs4R0FMRixvQkFBb0Isa0JBR1gsZUFBZTtrR0FIeEIsb0JBQW9CLHdEQ1JqQywwMEJBeUJBOzsyRkRqQmEsb0JBQW9CO2tCQUxoQyxTQUFTOytCQUNFLGtCQUFrQjs7MEJBT2YsTUFBTTsyQkFBQyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTUFUX0RJQUxPR19EQVRBIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLWRpYWxvZy1pbnB1dCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9kaWFsb2ctaW5wdXQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9kaWFsb2ctaW5wdXQuY29tcG9uZW50LmNzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBEaWFsb2dJbnB1dENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGRhdGE6IGFueTtcblxuICBjb25zdHJ1Y3RvcihASW5qZWN0KE1BVF9ESUFMT0dfREFUQSkgcHVibGljIGRpYWxvZ0RhdGE6IGFueSkge31cblxuICBuZ09uSW5pdCgpIHt9XG59XG4iLCI8ZGl2IGNsYXNzPVwiZGlhbG9nLWhlYWRlclwiPlxuICA8bWF0LWxhYmVsIG1hdC1kaWFsb2ctdGl0bGU+e3sgZGlhbG9nRGF0YT8uaGVhZGVyIH19PC9tYXQtbGFiZWw+XG4gIDxtYXQtaWNvbiBjbGFzcz1cIm1hdC1jYW5jZWwtaWNvblwiIFttYXQtZGlhbG9nLWNsb3NlXT1cImZhbHNlXCJcbiAgICA+Y2FuY2VsX2NpcmNsZV9vdXRsaW5lPC9tYXQtaWNvblxuICA+XG48L2Rpdj5cbjxkaXYgbWF0LWRpYWxvZy1jb250ZW50PlxuICA8bWF0LWZvcm0tZmllbGQgc3R5bGU9XCJ3aWR0aDogMTAwJVwiIGZsb2F0TGFiZWw9XCJhbHdheXNcIj5cbiAgICA8bWF0LWxhYmVsPnt7IGRpYWxvZ0RhdGE/LmxhYmVsIH19PC9tYXQtbGFiZWw+XG4gICAgPGlucHV0XG4gICAgICBtYXRJbnB1dFxuICAgICAgWyhuZ01vZGVsKV09XCJkYXRhXCJcbiAgICAgIFtyZXF1aXJlZF09XCJkaWFsb2dEYXRhPy5yZXF1aXJlZFwiXG4gICAgICBbbWF4bGVuZ3RoXT1cImRpYWxvZ0RhdGE/Lm1heExlbmd0aFwiXG4gICAgLz5cbiAgPC9tYXQtZm9ybS1maWVsZD5cbjwvZGl2PlxuPGRpdiBtYXQtZGlhbG9nLWFjdGlvbnMgY2xhc3M9XCJidXR0b25zLXNlY3Rpb25cIj5cbiAgPGJ1dHRvbiBtYXQtcmFpc2VkLWJ1dHRvbiBbbWF0LWRpYWxvZy1jbG9zZV09XCJmYWxzZVwiPlxuICAgIHt7IGRpYWxvZ0RhdGE/LmJ1dHRvblRleHQ/LmNhbmNlbCB9fVxuICA8L2J1dHRvbj5cbiAgPGJ1dHRvbiBtYXQtcmFpc2VkLWJ1dHRvbiBbbWF0LWRpYWxvZy1jbG9zZV09XCJkYXRhXCIgY2RrRm9jdXNJbml0aWFsPlxuICAgIHt7IGRpYWxvZ0RhdGE/LmJ1dHRvblRleHQ/Lm9rIH19XG4gIDwvYnV0dG9uPlxuPC9kaXY+XG4iXX0=