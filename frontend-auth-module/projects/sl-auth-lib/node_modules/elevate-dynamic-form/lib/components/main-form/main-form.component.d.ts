import { OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { ThemePalette } from '@angular/material/core';
import { MatDatepicker } from '@angular/material/datepicker';
import * as i0 from "@angular/core";
interface JsonFormValidators {
    min?: number;
    max?: number;
    required?: boolean;
    requiredTrue?: boolean;
    email?: boolean;
    minLength?: number;
    maxLength?: number;
    pattern?: string;
    nullValidator?: boolean;
}
interface JsonFormControlOptions {
    min?: string;
    max?: string;
    step?: string;
    icon?: string;
}
interface JsonFormErrorMessages {
    required?: string;
    email?: string;
    minlength?: string;
    pattern?: string;
    min?: string;
    max?: string;
    requiredtrue?: string;
    nullvalidator?: string;
}
interface JsonFormControls {
    name: string;
    label: string;
    value: string;
    type: string;
    class: string;
    position: string;
    disabled?: boolean;
    options?: JsonFormControlOptions;
    validators: JsonFormValidators;
    numberOfStars?: number;
    errorMessage?: JsonFormErrorMessages;
    dependentKey?: string;
    isNumberOnly?: boolean;
    placeHolder?: string;
}
export interface DynamicFormData {
    controls: JsonFormControls[];
}
export declare class MainFormComponent implements OnInit {
    private fb;
    formJson: any;
    myForm: FormGroup;
    showSpinners: boolean;
    showSeconds: boolean;
    touchUi: boolean;
    enableMeridian: boolean;
    stepHour: number;
    stepMinute: number;
    stepSecond: number;
    color: ThemePalette;
    currentDate: Date;
    maxDate: Date;
    dependedChild: any;
    dependedChildDate: string;
    dependedParent: any;
    dependedParentDate: any;
    picker: MatDatepicker<Date> | undefined;
    constructor(fb: FormBuilder);
    ngOnInit(): void;
    createForm(controls: JsonFormControls[]): void;
    dateSelected(event: any, control: any): void;
    togglePasswordVisibility(control: any): void;
    compareWith(value1: any, value2: any): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<MainFormComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MainFormComponent, "dynamic-form", never, { "formJson": { "alias": "formJson"; "required": false; }; }, {}, never, never, false, never>;
}
export {};
